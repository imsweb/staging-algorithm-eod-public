plugins {
    id 'java-library'
    id 'checkstyle'
    id "com.github.spotbugs" version "4.6.0"
    id 'maven-publish'
    id 'signing'
    id "io.codearte.nexus-staging" version "0.22.0"  // logs into Sonotype OSS and does a "Close" and "Release"
    id 'com.adarshr.test-logger' version '2.1.1'
    id "com.github.ben-manes.versions" version "0.36.0"
    id "org.owasp.dependencycheck" version "6.0.3"
}

group = 'com.imsweb'
version = '2.0.2'
description = 'EOD algorithm for the java-staging-client'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:all" << "-Xlint:-serial" << "-Werror"
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
    maven {
        url = 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

dependencies {
    spotbugs 'com.github.spotbugs:spotbugs:4.1.4'

    api 'com.imsweb:staging-client-java:5.0'

    testImplementation('com.imsweb:staging-client-java:5.0') {
        capabilities {
            requireCapability("com.imsweb:staging-client-java-update-support")
        }
    }

    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.assertj:assertj-core:3.18.1'
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': archiveVersion,
                'Implementation-Vendor': group,
                'Created-By': System.properties['java.vm.version'] + ' (' + System.properties['java.vm.vendor'] + ')',
                'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version'),
                'Automatic-Module-Name': 'com.imsweb.staging.eod.public'
        )
    }
}

test {
    maxHeapSize = "1g"
}

checkstyle {
    toolVersion '8.29'
    configFile = file('config/checkstyle/checkstyle.xml')
}

spotbugs {
    excludeFilter = file('config/spotbugs/spotbugs-exclude.xml')
}

// OWASP check (https://jeremylong.github.io/DependencyCheck/index.html)
dependencyCheck {
    failOnError = true
}

// don't try to release a snapshot to a non-snapshot repository, that won't work anyway
if (version.endsWith('-SNAPSHOT')) {
    gradle.startParameter.excludedTaskNames += 'signMavenJavaPublication'
    gradle.startParameter.excludedTaskNames += 'closeAndReleaseRepository'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'staging-algorithm-eod-public'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'EOD Staging Algorithm'
                description = 'EOD algorithm for the staging-client-java'
                url = 'https://github.com/imsweb/staging-algorithm-eod-public'
                inceptionYear = '2015'

                licenses {
                    license {
                        name = 'A modified BSD License (BSD)'
                        url = 'https://github.com/imsweb/staging-algorithm-eod-public/blob/master/LICENSE'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'ctmay4'
                        name = 'Chuck May'
                        email = 'mayc@imsweb.com'
                    }
                }

                scm {
                    url = 'https://github.com/imsweb/staging-algorithm-eod'
                    connection = 'scm:https://github.com/imsweb/staging-algorithm-eod-public.git'
                    developerConnection = 'scm:git@github.com:imsweb/staging-algorithm-eod-public.git'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username = project.findProperty('nexusUsername') ?: ''
                password = project.findProperty('nexusPassword') ?: ''
            }
        }
    }
}

signing {
    def signingKey = project.findProperty('signingKey') ?: ''
    def signingPassword = project.findProperty('signingPassword') ?: ''

    useInMemoryPgpKeys(signingKey, signingPassword)

    sign publishing.publications.mavenJava
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

// configure nexus staging plugin
nexusStaging {
    numberOfRetries = 50
    delayBetweenRetriesInMillis = 5000
}

wrapper {
    gradleVersion = '6.7'
    distributionType = Wrapper.DistributionType.ALL
}